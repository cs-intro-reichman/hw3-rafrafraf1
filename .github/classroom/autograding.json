{
  "tests": [
    {
      "name": "LoanCalc Test with Loan Sum 100000, Interest Rate 3%, and Periods 12",
      "setup": "javac LoanCalc.java",
      "run": "java LoanCalc 100000 3 12",
      "input": "",
      "output": "Loan sum = 100000.0, interest rate = 3.0%, periods = 12\nPeriodical payment, using brute force: 9753.60\nnumber of iterations: 1420268\nPeriodical payment, using bi-section search: 9753.60\nnumber of iterations: 27",
      "comparison": "exact",
      "timeout": 10,
      "points": 5
      },
      {
      "name": "LoanCalc Test with Loan Sum 75000, Interest Rate 4%, and Periods 24",
      "setup": "javac LoanCalc.java",
      "run": "java LoanCalc 75000 4 24",
      "input": "",
      "output": "Loan sum = 75000.0, interest rate = 4.0%, periods = 24\nPeriodical payment, using brute force: 4729.82\nnumber of iterations: 1604820\nPeriodical payment, using bi-section search: 4729.82\nnumber of iterations: 27",
      "comparison": "exact",
      "timeout": 10,
      "points": 5
      },
      {
      "name": "LoanCalc Test with Loan Sum 50000, Interest Rate 5%, and Periods 36",
      "setup": "javac LoanCalc.java",
      "run": "java LoanCalc 50000 5 36",
      "input": "",
      "output": "Loan sum = 50000.0, interest rate = 5.0%, periods = 36\nPeriodical payment, using brute force: 2877.83\nnumber of iterations: 1488943\nPeriodical payment, using bi-section search: 2877.83\nnumber of iterations: 26",
      "comparison": "exact",
      "timeout": 10,
      "points": 10
      },
      {
      "name": "LoanCalc Test with Loan Sum 120000, Interest Rate 3.5%, and Periods 60",
      "setup": "javac LoanCalc.java",
      "run": "java LoanCalc 120000 3.5 60",
      "input": "",
      "output": "Loan sum = 120000.0, interest rate = 3.5%, periods = 60\nPeriodical payment, using brute force: 4647.96\nnumber of iterations: 2647957\nPeriodical payment, using bi-section search: 4647.96\nnumber of iterations: 27",
      "comparison": "exact",
      "timeout": 10,
      "points": 10
      },
      {
        "name": "Algebra Tests - Testing all algebraic operations without using forbidden operators",
        "setup": "javac TestAlgebra.java Algebra.java",
        "run": "java TestAlgebra",
        "input": "",
        "output": "Testing plus operations...\nTesting minus operations...\nTesting times operations...\nTesting power operations...\nTesting division operations...\nTesting modulo operations...\nTesting square root operations...\nChecking for forbidden operators...\nPassed 43 out of 43 tests",
        "comparison": "included",
        "timeout": 10,
        "points": 30
      },
      {
        "name": "Anagram Tests - Testing string preprocessing and anagram validation",
        "setup": "javac TestAnagram.java Anagram.java",
        "run": "java TestAnagram",
        "input": "",
        "output": "Testing silent/listen: true\nTesting William Shakespeare/I am a weakish speller: true\nTesting Madam Curie/Radium came: true\nTesting Tom Marvolo Riddle/I am Lord Voldemort: true\nTest 1 (special chars): PASS\nStress test for random anagrams: PASS",
        "comparison": "included",
        "timeout": 10,
        "points": 40
      }
  ]
}